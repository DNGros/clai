#!/bin/bash
#
# Licensed Materials - Property of IBM
# COPYRIGHT IBM CORP. 2017
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
#
# toASCII - Convert file(s) from EBCDIC to ASCII
#

WHITELIST_REGEX="^[A-Za-z0-9._-]*$"

getPerms ()
{
  # Check input against character whitelist
  if [[ "${1:0:1}" =~ ${WHITELIST_REGEX} ]]
  then
    convert_to_num ()
    {
      TOP=0
      MID=0
      BOT=0
      if [[ ${1:0:1} == "r" ]] ; then
        TOP=4
      fi
      if [[ ${1:1:1} == "w" ]] ; then
        MID=2
      fi
      if [[ ${1:2:1} == "x" ]] ; then
        BOT=1
      fi
      RESULT=$((TOP + MID + BOT))
    }
    
    # should use find instead of ls -l, but having issues with uss find
    PERMS=$(ls -l "$1" | awk '{print $1}')
    USER_PERMS=${PERMS:1:3}
    GROUP_PERMS=${PERMS:4:3}
    OWNER_PERMS=${PERMS:7:3}

    convert_to_num "$USER_PERMS"
    USER_NUM=$RESULT
    convert_to_num "$GROUP_PERMS"
    GROUP_NUM=$RESULT
    convert_to_num "$OWNER_PERMS"
    OWNER_NUM=$RESULT

    perms="0$USER_NUM$GROUP_NUM$OWNER_NUM"
  else
    echo "Input data does not follow naming conventions, please modify"
  fi
}

FORCE=false

until [ "$#" -eq 0 ]; do
  # Check input against whitelist
  if [[ "$1" =~ ${WHITELIST_REGEX} ]]
  then 
    if [ -d "$1" ]; then
      for file in "$1"/*; do
        if /bin/test "$file" -CS ISO8859-1
          then
          iconv -f IBM-1047 -t ISO8859-1 "$file" > "$file".toASCIItmp
          getPerms "$file"
          rm "$file"
          mv "$file".toASCIItmp "$file"
          chmod $perms "$file"
          chtag -t -c iso8859-1 "$file"
        else
          echo "$file is already tagged ASCII"
        fi
      done
    else
      if [ -f "$1" ]; then
        if ! /bin/test "$1" -CS ISO8859-1
          then
          iconv -f IBM-1047 -t ISO8859-1 "$1" > "$1".toASCIItmp
          getPerms "$1"
          rm "$1"
          mv "$1".toASCIItmp "$1"
          chmod $perms "$1"
          chtag -t -c iso8859-1 "$1"
        else
          echo "$1 is already tagged ASCII"
        fi
      else
        echo "$1 is not valid"
      fi
    fi
  else
    echo "Input data does not follow naming conventions, please modify"
  fi
  shift
done

exit 0